steps:
  # - name: gcr.io/cloud-builders/docker
  #   args:
  #     - build
  #     - '-t'
  #     - builder
  #     - '-f'
  #     - ./.docker/builder.dockerfile
  #     - .
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      [
        "-c",
        "docker pull ${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/server:latest || exit 0",
      ]
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "-t"
      - "${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/server"
      - "-f"
      - "./.docker/backend.dockerfile"
      - "--cache-from"
      - "${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/server:latest"
      - .
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      [
        "-c",
        "docker pull ${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/client:latest || exit 0",
      ]
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "-t"
      - "${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/client"
      - "-f"
      - "./.docker/frontend.dockerfile"
      - "--cache-from"
      - "${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/client:latest"
      - .
images:
  - "${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/server"
  - "${_REPO_ZONE}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/client"
